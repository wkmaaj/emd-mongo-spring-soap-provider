/*
 * This file was generated by the Spring Initialzr tool.
 *
 * This is a general purpose Gradle build.
 * Learn more about Gradle by exploring our samples at https://docs.gradle.org/8.1.1/samples
 */
plugins {
    id 'java'
    id('org.springframework.boot') version '3.1.2'
    id('io.spring.dependency-management') version '1.1.0'
}

group = 'llc.jaradatbros'
version = '0.1.0'
def snapshot = '-SNAPSHOT'
def release = '-RELEASE'

java {
    sourceCompatibility = '17'
}

bootJar {
    archiveBaseName = 'emd-mongo-spring-soap-provider'
    archiveVersion = version + snapshot
}

configurations {
    jaxb
    compileOnly {
        extendsFrom annotationProcessor
    }
}

tasks.register('genJaxb') {
    ext.generatedSourcesDir = 'src/generated/java'
    ext.schemasDir = 'src/main/resources/xsd'
    outputs.dir generatedSourcesDir

    doLast() {
        project.ant {
            taskdef name: 'xjc', classname: 'com.sun.tools.xjc.XJCTask', classpath: configurations.jaxb.asPath
            mkdir(dir: generatedSourcesDir)
            xjc(destdir: generatedSourcesDir) {
                schema(dir: schemasDir, includes: '*.xsd')
                arg(value: '-wsdl')
                produces(dir: generatedSourcesDir, includes: '**/*.java')
            }
        }
    }
}

repositories {
    mavenCentral()
    google()
    maven {
        url "https://repo.spring.io/release"
    }
    maven {
        url "https://repository.jboss.org/maven2"
    }
}

dependencies {
    implementation 'org.springframework.boot:spring-boot-starter-actuator'
    implementation 'org.springframework.boot:spring-boot-starter-data-mongodb'
    implementation 'org.springframework.boot:spring-boot-starter-web'
    implementation 'org.springframework.boot:spring-boot-starter-web-services'
    implementation 'wsdl4j:wsdl4j'
    implementation 'javax.xml.bind:jaxb-api:2.4.0-b180830.0359'
    jaxb("org.glassfish.jaxb:jaxb-xjc")
    compileOnly 'org.projectlombok:lombok'
    annotationProcessor 'org.springframework.boot:spring-boot-configuration-processor'
    annotationProcessor 'org.projectlombok:lombok'
    testImplementation 'org.springframework.boot:spring-boot-starter-test'
}

tasks.named('test') {
    useJUnitPlatform()
}

tasks.named('wrapper') {
    distributionType = Wrapper.DistributionType.BIN
    distributionSha256Sum = 'e111cb9948407e26351227dabce49822fb88c37ee72f1d1582a69c68af2e702f'
}

sourceSets {
    main {
        java {
            srcDir 'src/generated/java'
        }
    }
}

compileJava.dependsOn genJaxb